plugins {
	id 'org.springframework.boot' version '2.7.0'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java'
	id 'org.openapi.generator' version '6.0.0'
}

group = 'com.betoola'
version = '0.0.4'
sourceCompatibility = '11'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

def swaggerVersion = '1.6.4'

dependencies {

	compileOnly("org.projectlombok:lombok")
	annotationProcessor("org.projectlombok:lombok")

	runtimeOnly("com.h2database:h2")

	implementation("org.springframework.boot:spring-boot-starter-data-jpa")
	implementation("org.springframework.boot:spring-boot-starter-validation")
	implementation("org.springframework.boot:spring-boot-starter-undertow")
	implementation("org.springframework.boot:spring-boot-starter-web") {
		exclude module: 'spring-boot-starter-tomcat'
	}

	implementation("org.springdoc:springdoc-openapi-ui:${swaggerVersion}")

	implementation("org.openapitools:jackson-databind-nullable:0.2.0")

	testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.1'
	testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.1'

	testImplementation("org.springframework.boot:spring-boot-starter-test")

}

test {
	useJUnitPlatform()
}

openApiGenerate {
	generatorName = "spring"
	inputSpec = "$rootDir/src/main/resources/openapi.yaml".toString()
	outputDir = "$rootDir".toString()
	apiPackage = "com.betoola.demo.controllers"
	invokerPackage = "com.betoola.demo"
	modelPackage = "com.betoola.demo.dtos"
	configOptions = [
		dateLibrary: "java8",
		additionalModelTypeAnnotations: "@lombok.Data;@lombok.Builder;@lombok.NoArgsConstructor;@lombok.AllArgsConstructor",
		interfaceOnly: 'true',
		skipDefaultInterface: 'true'
	]
}

compileJava.dependsOn tasks.openApiGenerate